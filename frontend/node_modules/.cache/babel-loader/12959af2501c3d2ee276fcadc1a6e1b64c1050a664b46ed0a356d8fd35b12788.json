{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\beginner-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a list of frog images\n  const frogImages = ['/frogs/frog1.jpg',\n  // Index 0\n  '/frogs/frog2.jpg',\n  // Index 1\n  '/frogs/frog3.jpg',\n  // Index 2\n  '/frogs/frog4.jpg' // Index 3\n  ];\n  const getRandomFrogImage = async () => {\n    try {\n      const response = await fetch('https://source.unsplash.com/featured/?frog');\n      setFrogImage(response.url);\n    } catch (error) {\n      console.error('Error catchin frogs', error);\n    }\n  };\n  const increment = () => {\n    // Ensure count does not exceed the length of the frog images array\n    setCount(prevCount => (prevCount + 1) % frogImages.length);\n  };\n  const decrement = () => {\n    if (count > 0) {\n      setCount(prevCount => prevCount - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Counter App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Frog Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: frogImages[count],\n        alt: `Frog ${count + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRandomFrogImage,\n        children: \"Let's go catch a froggerman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","count","setCount","frogImages","getRandomFrogImage","response","fetch","setFrogImage","url","error","console","increment","prevCount","length","decrement","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/beginner-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  // Define a list of frog images\n  const frogImages = [\n    '/frogs/frog1.jpg', // Index 0\n    '/frogs/frog2.jpg', // Index 1\n    '/frogs/frog3.jpg', // Index 2\n    '/frogs/frog4.jpg', // Index 3\n  ];\n\n  const getRandomFrogImage = async () => {\n    try {\n      const response = await fetch('https://source.unsplash.com/featured/?frog');\n      setFrogImage(response.url);\n    } catch (error) {\n      console.error('Error catchin frogs', error);\n    }\n  }\n\n  const increment = () => {\n    // Ensure count does not exceed the length of the frog images array\n    setCount((prevCount) => (prevCount + 1) % frogImages.length);\n  };\n\n  const decrement = () => {\n    if (count > 0) {\n      setCount((prevCount) => prevCount - 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Simple Counter App</h1>\n      <p>Current Count: {count}</p>\n      <button onClick={increment}>Increase</button>\n      <button onClick={decrement}>Decrease</button>\n\n      {/* Display the frog image based on the current count */}\n      <div>\n        <h2>Frog Image:</h2>\n        <img src={frogImages[count]} alt={`Frog ${count + 1}`} />\n      </div>\n      <div>\n        <button onClick={getRandomFrogImage}>Let's go catch a froggerman</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMO,UAAU,GAAG,CACjB,kBAAkB;EAAE;EACpB,kBAAkB;EAAE;EACpB,kBAAkB;EAAE;EACpB,kBAAkB,CAAE;EAAA,CACrB;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1EC,YAAY,CAACF,QAAQ,CAACG,GAAG,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAT,QAAQ,CAAEU,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIT,UAAU,CAACU,MAAM,CAAC;EAC9D,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIb,KAAK,GAAG,CAAC,EAAE;MACbC,QAAQ,CAAEU,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC;EACF,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA;MAAAkB,QAAA,GAAG,iBAAe,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA;MAAQuB,OAAO,EAAEV,SAAU;MAAAK,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7CtB,OAAA;MAAQuB,OAAO,EAAEP,SAAU;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAG7CtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAKwB,GAAG,EAAEnB,UAAU,CAACF,KAAK,CAAE;QAACsB,GAAG,EAAE,QAAQtB,KAAK,GAAG,CAAC;MAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNtB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAQuB,OAAO,EAAEjB,kBAAmB;QAAAY,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAhDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}