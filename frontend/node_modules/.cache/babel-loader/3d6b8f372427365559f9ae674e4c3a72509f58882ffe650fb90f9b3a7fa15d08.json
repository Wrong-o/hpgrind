{"ast":null,"code":"/*!\n * chartjs-chart-matrix v2.0.1\n * https://chartjs-chart-matrix.pages.dev/\n * (c) 2023 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { toTRBLCorners, addRoundedRectPath, isObject } from 'chart.js/helpers';\nvar version = \"2.0.1\";\nclass MatrixController extends DatasetController {\n  static id = 'matrix';\n  static version = version;\n  static defaults = {\n    dataElementType: 'matrix',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height']\n      }\n    }\n  };\n  static overrides = {\n    interaction: {\n      mode: 'nearest',\n      intersect: true\n    },\n    scales: {\n      x: {\n        type: 'linear',\n        offset: true\n      },\n      y: {\n        type: 'linear',\n        reverse: true\n      }\n    }\n  };\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(rects, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(mode, rects[start], firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getBasePixel() : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const options = me.resolveDataElementOptions(i, mode);\n      const {\n        width,\n        height,\n        anchorX,\n        anchorY\n      } = options;\n      const properties = {\n        x: resolveX(anchorX, x, width),\n        y: resolveY(anchorY, y, height),\n        width,\n        height,\n        options\n      };\n      me.updateElement(rects[i], i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode);\n  }\n  draw() {\n    const me = this;\n    const data = me.getMeta().data || [];\n    let i, ilen;\n    for (i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(me._ctx);\n    }\n  }\n}\nfunction resolveX(anchorX, x, width) {\n  if (anchorX === 'left' || anchorX === 'start') {\n    return x;\n  }\n  if (anchorX === 'right' || anchorX === 'end') {\n    return x - width;\n  }\n  return x - width / 2;\n}\nfunction resolveY(anchorY, y, height) {\n  if (anchorY === 'top' || anchorY === 'start') {\n    return y;\n  }\n  if (anchorY === 'bottom' || anchorY === 'end') {\n    return y - height;\n  }\n  return y - height / 2;\n}\n\n/**\n * Helper function to get the bounds of the rect\n * @param {MatrixElement} rect the rect\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the rect\n * @private\n */\nfunction getBounds(rect, useFinalPosition) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n  return {\n    left: x,\n    top: y,\n    right: x + width,\n    bottom: y + height\n  };\n}\nfunction limit(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(rect, maxW, maxH) {\n  const value = rect.options.borderWidth;\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = +value.top || 0;\n    r = +value.right || 0;\n    b = +value.bottom || 0;\n    l = +value.left || 0;\n  } else {\n    t = r = b = l = +value || 0;\n  }\n  return {\n    t: limit(t, 0, maxH),\n    r: limit(r, 0, maxW),\n    b: limit(b, 0, maxH),\n    l: limit(l, 0, maxW)\n  };\n}\nfunction boundingRects(rect) {\n  const bounds = getBounds(rect);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(rect, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b\n    }\n  };\n}\nfunction inRange(rect, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const bounds = !rect || skipX && skipY ? false : getBounds(rect, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nclass MatrixElement extends Element {\n  static id = 'matrix';\n  static defaults = {\n    backgroundColor: undefined,\n    borderColor: undefined,\n    borderWidth: undefined,\n    borderRadius: 0,\n    anchorX: 'center',\n    anchorY: 'center',\n    width: 20,\n    height: 20\n  };\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const radius = toTRBLCorners(options.borderRadius);\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: outer.x,\n        y: outer.y,\n        w: outer.w,\n        h: outer.h,\n        radius\n      });\n      addRoundedRectPath(ctx, {\n        x: inner.x,\n        y: inner.y,\n        w: inner.w,\n        h: inner.h,\n        radius\n      });\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    } else {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: inner.x,\n        y: inner.y,\n        w: inner.w,\n        h: inner.h,\n        radius\n      });\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n  tooltipPosition() {\n    return this.getCenterPoint();\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nexport { MatrixController, MatrixElement };","map":{"version":3,"names":["DatasetController","Element","toTRBLCorners","addRoundedRectPath","isObject","version","MatrixController","id","defaults","dataElementType","animations","numbers","type","properties","overrides","interaction","mode","intersect","scales","x","offset","y","reverse","initialize","enableOptionSharing","update","me","meta","_cachedMeta","updateElements","data","length","rects","start","count","reset","xScale","yScale","firstOpts","resolveDataElementOptions","sharedOptions","getSharedOptions","i","parsed","getParsed","getBasePixel","getPixelForValue","options","width","height","anchorX","anchorY","resolveX","resolveY","updateElement","updateSharedOptions","draw","getMeta","ilen","_ctx","getBounds","rect","useFinalPosition","getProps","left","top","right","bottom","limit","value","min","max","Math","parseBorderWidth","maxW","maxH","borderWidth","t","r","b","l","boundingRects","bounds","border","outer","w","h","inner","inRange","skipX","skipY","MatrixElement","backgroundColor","undefined","borderColor","borderRadius","constructor","cfg","Object","assign","ctx","radius","save","beginPath","fillStyle","fill","restore","mouseX","mouseY","inXRange","inYRange","getCenterPoint","tooltipPosition","getRange","axis"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/node_modules/chartjs-chart-matrix/dist/chartjs-chart-matrix.esm.js"],"sourcesContent":["/*!\n * chartjs-chart-matrix v2.0.1\n * https://chartjs-chart-matrix.pages.dev/\n * (c) 2023 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { toTRBLCorners, addRoundedRectPath, isObject } from 'chart.js/helpers';\n\nvar version = \"2.0.1\";\n\nclass MatrixController extends DatasetController {\n\n  static id = 'matrix';\n  static version = version;\n\n  static defaults = {\n    dataElementType: 'matrix',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height']\n      }\n    },\n  };\n\n  static overrides = {\n    interaction: {\n      mode: 'nearest',\n      intersect: true\n    },\n    scales: {\n      x: {\n        type: 'linear',\n        offset: true\n      },\n      y: {\n        type: 'linear',\n        reverse: true\n      }\n    },\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(rects, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(mode, rects[start], firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getBasePixel() : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const options = me.resolveDataElementOptions(i, mode);\n      const {width, height, anchorX, anchorY} = options;\n      const properties = {\n        x: resolveX(anchorX, x, width),\n        y: resolveY(anchorY, y, height),\n        width,\n        height,\n        options\n      };\n      me.updateElement(rects[i], i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode);\n  }\n\n  draw() {\n    const me = this;\n    const data = me.getMeta().data || [];\n    let i, ilen;\n\n    for (i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(me._ctx);\n    }\n  }\n}\n\nfunction resolveX(anchorX, x, width) {\n  if (anchorX === 'left' || anchorX === 'start') {\n    return x;\n  }\n  if (anchorX === 'right' || anchorX === 'end') {\n    return x - width;\n  }\n  return x - width / 2;\n}\n\nfunction resolveY(anchorY, y, height) {\n  if (anchorY === 'top' || anchorY === 'start') {\n    return y;\n  }\n  if (anchorY === 'bottom' || anchorY === 'end') {\n    return y - height;\n  }\n  return y - height / 2;\n}\n\n/**\n * Helper function to get the bounds of the rect\n * @param {MatrixElement} rect the rect\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the rect\n * @private\n */\nfunction getBounds(rect, useFinalPosition) {\n  const {x, y, width, height} = rect.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n  return {left: x, top: y, right: x + width, bottom: y + height};\n}\n\nfunction limit(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(rect, maxW, maxH) {\n  const value = rect.options.borderWidth;\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = +value.top || 0;\n    r = +value.right || 0;\n    b = +value.bottom || 0;\n    l = +value.left || 0;\n  } else {\n    t = r = b = l = +value || 0;\n  }\n\n  return {\n    t: limit(t, 0, maxH),\n    r: limit(r, 0, maxW),\n    b: limit(b, 0, maxH),\n    l: limit(l, 0, maxW)\n  };\n}\n\nfunction boundingRects(rect) {\n  const bounds = getBounds(rect);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(rect, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b\n    }\n  };\n}\n\nfunction inRange(rect, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const bounds = !rect || (skipX && skipY) ? false : getBounds(rect, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nclass MatrixElement extends Element {\n\n  static id = 'matrix';\n\n  static defaults = {\n    backgroundColor: undefined,\n    borderColor: undefined,\n    borderWidth: undefined,\n    borderRadius: 0,\n    anchorX: 'center',\n    anchorY: 'center',\n    width: 20,\n    height: 20\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const radius = toTRBLCorners(options.borderRadius);\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {x: outer.x, y: outer.y, w: outer.w, h: outer.h, radius});\n      addRoundedRectPath(ctx, {x: inner.x, y: inner.y, w: inner.w, h: inner.h, radius});\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    } else {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {x: inner.x, y: inner.y, w: inner.w, h: inner.h, radius});\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n    }\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n\n  tooltipPosition() {\n    return this.getCenterPoint();\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n\nexport { MatrixController, MatrixElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}