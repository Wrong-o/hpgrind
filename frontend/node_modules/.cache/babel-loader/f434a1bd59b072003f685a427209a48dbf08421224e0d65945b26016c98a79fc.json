{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import axios from'axios';const api=axios.create({baseURL:process.env.REACT_APP_API_URL,withCredentials:true});function useQuestionGetter(){const[loading,setLoading]=useState(false);const[questionData,setQuestionData]=useState(null);const[message,setMessage]=useState(\"\");const[selectedAnswer,setSelectedAnswer]=useState(null);const[correctAnswer,setCorrectAnswer]=useState(null);const getQuestion=useCallback(async()=>{try{setLoading(true);const response=await api.get('/get-question');setQuestionData(response.data);setLoading(false);setMessage(\"\");setSelectedAnswer(null);setCorrectAnswer(null);}catch(error){console.error(\"Error fetching question:\",error);setLoading(false);setMessage(\"Failed to fetch question. Please try again.\");}},[]);useEffect(()=>{getQuestion();},[getQuestion]);const selectAnswer=answer=>{setSelectedAnswer(answer);};const submitAnswer=async()=>{if(!selectedAnswer){setMessage(\"Please select an answer before submitting.\");return;}try{const response=await api.post('/submit-answer',{answer:selectedAnswer});setCorrectAnswer(response.data.correctAnswer);setMessage(response.data.message||\"Answer submitted successfully.\");}catch(error){console.error(\"Error submitting answer:\",error);setMessage(\"Failed to submit answer. Please try again.\");}};return{loading,questionData,message,selectedAnswer,correctAnswer,getQuestion,selectAnswer,submitAnswer};}export default useQuestionGetter;","map":{"version":3,"names":["useState","useEffect","useCallback","axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","useQuestionGetter","loading","setLoading","questionData","setQuestionData","message","setMessage","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","getQuestion","response","get","data","error","console","selectAnswer","answer","submitAnswer","post"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/components/QuestionGetter.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  withCredentials: true,\r\n});\r\n\r\nfunction useQuestionGetter() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [questionData, setQuestionData] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [correctAnswer, setCorrectAnswer] = useState(null);\r\n\r\n  const getQuestion = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/get-question');\r\n      setQuestionData(response.data);\r\n      setLoading(false);\r\n      setMessage(\"\");\r\n      setSelectedAnswer(null);\r\n      setCorrectAnswer(null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching question:\", error);\r\n      setLoading(false);\r\n      setMessage(\"Failed to fetch question. Please try again.\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getQuestion();\r\n  }, [getQuestion]);\r\n\r\n  const selectAnswer = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const submitAnswer = async () => {\r\n    if (!selectedAnswer) {\r\n      setMessage(\"Please select an answer before submitting.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('/submit-answer', { answer: selectedAnswer });\r\n      setCorrectAnswer(response.data.correctAnswer);\r\n      setMessage(response.data.message || \"Answer submitted successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting answer:\", error);\r\n      setMessage(\"Failed to submit answer. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return { \r\n    loading, \r\n    questionData, \r\n    message, \r\n    selectedAnswer, \r\n    correctAnswer, \r\n    getQuestion, \r\n    selectAnswer, \r\n    submitAnswer \r\n  };\r\n}\r\n\r\nexport default useQuestionGetter;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACxD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CACtCC,eAAe,CAAE,IACnB,CAAC,CAAC,CAEF,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACoB,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CAExD,KAAM,CAAAsB,WAAW,CAAGpB,WAAW,CAAC,SAAY,CAC1C,GAAI,CACFW,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAnB,GAAG,CAACoB,GAAG,CAAC,eAAe,CAAC,CAC/CT,eAAe,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAC9BZ,UAAU,CAAC,KAAK,CAAC,CACjBI,UAAU,CAAC,EAAE,CAAC,CACdE,iBAAiB,CAAC,IAAI,CAAC,CACvBE,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDb,UAAU,CAAC,KAAK,CAAC,CACjBI,UAAU,CAAC,6CAA6C,CAAC,CAC3D,CACF,CAAC,CAAE,EAAE,CAAC,CAENhB,SAAS,CAAC,IAAM,CACdqB,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAM,YAAY,CAAIC,MAAM,EAAK,CAC/BV,iBAAiB,CAACU,MAAM,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACZ,cAAc,CAAE,CACnBD,UAAU,CAAC,4CAA4C,CAAC,CACxD,OACF,CAEA,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAnB,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,CAAE,CAAEF,MAAM,CAAEX,cAAe,CAAC,CAAC,CAC7EG,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAACL,aAAa,CAAC,CAC7CH,UAAU,CAACM,QAAQ,CAACE,IAAI,CAACT,OAAO,EAAI,gCAAgC,CAAC,CACvE,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDT,UAAU,CAAC,4CAA4C,CAAC,CAC1D,CACF,CAAC,CAED,MAAO,CACLL,OAAO,CACPE,YAAY,CACZE,OAAO,CACPE,cAAc,CACdE,aAAa,CACbE,WAAW,CACXM,YAAY,CACZE,YACF,CAAC,CACH,CAEA,cAAe,CAAAnB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}