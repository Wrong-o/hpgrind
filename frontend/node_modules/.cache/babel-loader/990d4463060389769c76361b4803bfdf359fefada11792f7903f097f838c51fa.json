{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizApp=()=>{const[menuVisible,setMenuVisible]=useState(true);const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[userAnswers,setUserAnswers]=useState([]);const[isFinished,setIsFinished]=useState(false);const[missedQuestions,setMissedQuestions]=useState([]);// Gångertabell game state\nconst[isGångertabell,setIsGångertabell]=useState(false);const[gangerQuestion,setGangerQuestion]=useState({});const[gangerAnswers,setGangerAnswers]=useState([]);const[gangerScore,setGangerScore]=useState(0);const[gangerGameOver,setGangerGameOver]=useState(false);const[timeLeft,setTimeLeft]=useState(15);const[totalAnswers,setTotalAnswers]=useState(0);useEffect(()=>{const fetchQuestions=async()=>{const response=await fetch('/question.json');const data=await response.json();const shuffledQuestions=data.sort(()=>Math.random()-0.5);setQuestions(shuffledQuestions);};fetchQuestions();},[]);const generateGangerQuestion=useCallback(()=>{const num1=Math.floor(Math.random()*10)+1;const num2=Math.floor(Math.random()*10)+1;const correctAnswer=num1*num2;const wrongAnswers=new Set();while(wrongAnswers.size<3){const wrongAnswer=Math.floor(Math.random()*100)+1;if(wrongAnswer!==correctAnswer){wrongAnswers.add(wrongAnswer);}}const allAnswers=Array.from(wrongAnswers).concat(correctAnswer);const shuffledAnswers=allAnswers.sort(()=>Math.random()-0.5);setGangerQuestion({num1,num2,correctAnswer});setGangerAnswers(shuffledAnswers);},[]);useEffect(()=>{if(isGångertabell&&!gangerGameOver){generateGangerQuestion();const timer=setInterval(()=>{setTimeLeft(prevTime=>{if(prevTime<=1){clearInterval(timer);setGangerGameOver(true);return 0;}return prevTime-1;});},1000);return()=>clearInterval(timer);}},[isGångertabell,gangerGameOver,generateGangerQuestion]);const handleGangerAnswer=selectedOption=>{setTotalAnswers(prev=>prev+1);if(selectedOption===gangerQuestion.correctAnswer){setGangerScore(prev=>prev+1);}generateGangerQuestion();};const startGangerGame=()=>{setIsGångertabell(true);setMenuVisible(false);setGangerScore(0);setTotalAnswers(0);setGangerGameOver(false);setTimeLeft(15);};const handleAnswer=selectedOption=>{setUserAnswers(prev=>[...prev,selectedOption]);if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}else{setIsFinished(true);checkMissedQuestions();}};const checkMissedQuestions=()=>{const missed=questions.filter((question,index)=>userAnswers[index]!==question.correct_answer);setMissedQuestions(missed);};const correctAnswersCount=()=>{return userAnswers.filter((answer,index)=>answer===questions[index].correct_answer).length;};const restartQuiz=()=>{setUserAnswers([]);setCurrentQuestionIndex(0);setIsFinished(false);const shuffledMissedQuestions=missedQuestions.sort(()=>Math.random()-0.5);setQuestions(shuffledMissedQuestions);};const startQuiz=category=>{if(category==='Kvadratrot'){const kvadratrotQuestions=questions.filter(q=>q.category==='Kvadratrot');setQuestions(kvadratrotQuestions);setCurrentQuestionIndex(0);setIsFinished(false);setMenuVisible(false);}};const resetAllGames=()=>{setIsGångertabell(false);setGangerGameOver(false);setGangerScore(0);setTotalAnswers(0);setTimeLeft(15);setIsFinished(false);setCurrentQuestionIndex(0);setUserAnswers([]);};if(menuVisible){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Huvudmeny\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetAllGames();startQuiz('Kvadratrot');},children:\"Kvadratrot\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetAllGames();startGangerGame();},children:\"G\\xE5ngertabell\"})]});}if(isFinished){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quiz avslutat!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"R\\xE4tta svar: \",correctAnswersCount(),\" av \",questions.length]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Resultat\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Fr\\xE5ga\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ditt svar\"}),/*#__PURE__*/_jsx(\"th\",{children:\"R\\xE4tt svar\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Resultat\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:questions.map((question,index)=>{const userAnswer=userAnswers[index];const isCorrect=userAnswer===question.correct_answer;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:question.text}),/*#__PURE__*/_jsx(\"td\",{children:userAnswer||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:question.correct_answer}),/*#__PURE__*/_jsx(\"td\",{children:isCorrect?'Rätt':'Fel'})]},index);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:restartQuiz,children:\"F\\xF6rs\\xF6k med missade fr\\xE5gor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetAllGames();setMenuVisible(true);},children:\"Tillbaka till menyn\"})]});}if(isGångertabell){if(gangerGameOver){const percentage=totalAnswers>0?gangerScore/totalAnswers*100:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Spelet \\xE4r slut!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"R\\xE4tta svar: \",gangerScore,\" av \",totalAnswers]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Procent: \",percentage.toFixed(2),\"%\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{resetAllGames();setMenuVisible(true);},children:\"Tillbaka till menyn\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Tid kvar: \",timeLeft,\" sekunder\"]}),/*#__PURE__*/_jsxs(\"h2\",{children:[gangerQuestion.num1,\" x \",gangerQuestion.num2,\" = ?\"]}),/*#__PURE__*/_jsx(\"div\",{children:gangerAnswers.map((answer,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleGangerAnswer(answer),children:answer},index))})]});}if(questions.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:\"Laddar fr\\xE5gor...\"});}const currentQuestion=questions[currentQuestionIndex];return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentQuestion.text}),/*#__PURE__*/_jsx(\"div\",{children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswer(option),children:option},index))})]});};export default QuizApp;","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","QuizApp","menuVisible","setMenuVisible","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","isFinished","setIsFinished","missedQuestions","setMissedQuestions","isGångertabell","setIsGångertabell","gangerQuestion","setGangerQuestion","gangerAnswers","setGangerAnswers","gangerScore","setGangerScore","gangerGameOver","setGangerGameOver","timeLeft","setTimeLeft","totalAnswers","setTotalAnswers","fetchQuestions","response","fetch","data","json","shuffledQuestions","sort","Math","random","generateGangerQuestion","num1","floor","num2","correctAnswer","wrongAnswers","Set","size","wrongAnswer","add","allAnswers","Array","from","concat","shuffledAnswers","timer","setInterval","prevTime","clearInterval","handleGangerAnswer","selectedOption","prev","startGangerGame","handleAnswer","length","checkMissedQuestions","missed","filter","question","index","correct_answer","correctAnswersCount","answer","restartQuiz","shuffledMissedQuestions","startQuiz","category","kvadratrotQuestions","q","resetAllGames","className","children","onClick","map","userAnswer","isCorrect","text","percentage","toFixed","currentQuestion","options","option"],"sources":["C:/Users/jayb/Desktop/blogg/react/beginner-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './App.css';\n\nconst QuizApp = () => {\n  const [menuVisible, setMenuVisible] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [missedQuestions, setMissedQuestions] = useState([]);\n\n  // Gångertabell game state\n  const [isGångertabell, setIsGångertabell] = useState(false);\n  const [gangerQuestion, setGangerQuestion] = useState({});\n  const [gangerAnswers, setGangerAnswers] = useState([]);\n  const [gangerScore, setGangerScore] = useState(0);\n  const [gangerGameOver, setGangerGameOver] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(15);\n  const [totalAnswers, setTotalAnswers] = useState(0);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const response = await fetch('/question.json');\n      const data = await response.json();\n      const shuffledQuestions = data.sort(() => Math.random() - 0.5);\n      setQuestions(shuffledQuestions);\n    };\n    fetchQuestions();\n  }, []);\n\n  const generateGangerQuestion = useCallback(() => {\n    const num1 = Math.floor(Math.random() * 10) + 1;\n    const num2 = Math.floor(Math.random() * 10) + 1;\n    const correctAnswer = num1 * num2;\n    const wrongAnswers = new Set();\n\n    while (wrongAnswers.size < 3) {\n      const wrongAnswer = Math.floor(Math.random() * 100) + 1;\n      if (wrongAnswer !== correctAnswer) {\n        wrongAnswers.add(wrongAnswer);\n      }\n    }\n\n    const allAnswers = Array.from(wrongAnswers).concat(correctAnswer);\n    const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n\n    setGangerQuestion({ num1, num2, correctAnswer });\n    setGangerAnswers(shuffledAnswers);\n  }, []);\n\n  useEffect(() => {\n    if (isGångertabell && !gangerGameOver) {\n      generateGangerQuestion();\n      const timer = setInterval(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setGangerGameOver(true);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [isGångertabell, gangerGameOver, generateGangerQuestion]);\n\n  const handleGangerAnswer = (selectedOption) => {\n    setTotalAnswers((prev) => prev + 1);\n    if (selectedOption === gangerQuestion.correctAnswer) {\n      setGangerScore((prev) => prev + 1);\n    }\n    generateGangerQuestion();\n  };\n\n  const startGangerGame = () => {\n    setIsGångertabell(true);\n    setMenuVisible(false);\n    setGangerScore(0);\n    setTotalAnswers(0);\n    setGangerGameOver(false);\n    setTimeLeft(15);\n  };\n\n  const handleAnswer = (selectedOption) => {\n    setUserAnswers((prev) => [...prev, selectedOption]);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setIsFinished(true);\n      checkMissedQuestions();\n    }\n  };\n\n  const checkMissedQuestions = () => {\n    const missed = questions.filter((question, index) => userAnswers[index] !== question.correct_answer);\n    setMissedQuestions(missed);\n  };\n\n  const correctAnswersCount = () => {\n    return userAnswers.filter((answer, index) => answer === questions[index].correct_answer).length;\n  };\n\n  const restartQuiz = () => {\n    setUserAnswers([]);\n    setCurrentQuestionIndex(0);\n    setIsFinished(false);\n    const shuffledMissedQuestions = missedQuestions.sort(() => Math.random() - 0.5);\n    setQuestions(shuffledMissedQuestions);\n  };\n\n  const startQuiz = (category) => {\n    if (category === 'Kvadratrot') {\n      const kvadratrotQuestions = questions.filter(q => q.category === 'Kvadratrot');\n      setQuestions(kvadratrotQuestions);\n      setCurrentQuestionIndex(0);\n      setIsFinished(false);\n      setMenuVisible(false);\n    }\n  };\n\n  const resetAllGames = () => {\n    setIsGångertabell(false);\n    setGangerGameOver(false);\n    setGangerScore(0);\n    setTotalAnswers(0);\n    setTimeLeft(15);\n    setIsFinished(false);\n    setCurrentQuestionIndex(0);\n    setUserAnswers([]);\n  };\n\n  if (menuVisible) {\n    return (\n      <div className=\"App\">\n        <h1>Huvudmeny</h1>\n        <button onClick={() => { resetAllGames(); startQuiz('Kvadratrot'); }}>Kvadratrot</button>\n        <button onClick={() => { resetAllGames(); startGangerGame(); }}>Gångertabell</button>\n      </div>\n    );\n  }\n\n  if (isFinished) {\n    return (\n      <div className=\"App\">\n        <h1>Quiz avslutat!</h1>\n        <p>Rätta svar: {correctAnswersCount()} av {questions.length}</p>\n        <h2>Resultat</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Fråga</th>\n              <th>Ditt svar</th>\n              <th>Rätt svar</th>\n              <th>Resultat</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question, index) => {\n              const userAnswer = userAnswers[index];\n              const isCorrect = userAnswer === question.correct_answer;\n              return (\n                <tr key={index}>\n                  <td>{question.text}</td>\n                  <td>{userAnswer || 'N/A'}</td>\n                  <td>{question.correct_answer}</td>\n                  <td>{isCorrect ? 'Rätt' : 'Fel'}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <button onClick={restartQuiz}>Försök med missade frågor</button>\n        <button onClick={() => { resetAllGames(); setMenuVisible(true); }}>Tillbaka till menyn</button>\n      </div>\n    );\n  }\n\n  if (isGångertabell) {\n    if (gangerGameOver) {\n      const percentage = totalAnswers > 0 ? (gangerScore / totalAnswers) * 100 : 0;\n      return (\n        <div className=\"App\">\n          <h1>Spelet är slut!</h1>\n          <p>Rätta svar: {gangerScore} av {totalAnswers}</p>\n          <p>Procent: {percentage.toFixed(2)}%</p>\n          <button onClick={() => { resetAllGames(); setMenuVisible(true); }}>Tillbaka till menyn</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h2>Tid kvar: {timeLeft} sekunder</h2>\n        <h2>{gangerQuestion.num1} x {gangerQuestion.num2} = ?</h2>\n        <div>\n          {gangerAnswers.map((answer, index) => (\n            <button key={index} onClick={() => handleGangerAnswer(answer)}>\n              {answer}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (questions.length === 0) {\n    return <div className=\"App\">Laddar frågor...</div>;\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"App\">\n      <h2>{currentQuestion.text}</h2>\n      <div>\n        {currentQuestion.options.map((option, index) => (\n          <button key={index} onClick={() => handleAnswer(option)}>\n            {option}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}