{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\frontend\\\\src\\\\pages\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [questionData, setQuestionData] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/get-question').then(response => response.json()).then(data => setQuestionData(data)).catch(error => console.error('Error fetching question:', error));\n  }, []);\n  const sendResultToBackend = (answer, isCorrect) => {\n    const data = {\n      questionId: questionData.id,\n      // Ensure questionData.id is defined\n      selectedAnswer: answer.toString(),\n      // Ensure answer is a string\n      isCorrect: isCorrect\n    };\n\n    // Print the content of the data object before sending\n    console.log('Sending result to backend:', JSON.stringify(data, null, 2));\n    fetch('http://localhost:8000/submit-result', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => console.log('Result sent successfully:', data)).catch(error => console.error('Error sending result:', error));\n  };\n  if (!questionData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 29\n  }, this);\n  const handleAnswerClick = answer => {\n    const isCorrect = answer === questionData.correct_answer; // Update as per your correct answer logic\n    sendResultToBackend(answer, isCorrect);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), questionData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswerClick(answer),\n      children: answer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"5zL27KiQI7NU3cz4oMrJkX+t2gU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Game","_s","questionData","setQuestionData","fetch","then","response","json","data","catch","error","console","sendResultToBackend","answer","isCorrect","questionId","id","selectedAnswer","toString","log","JSON","stringify","method","headers","body","ok","Error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAnswerClick","correct_answer","question","answers","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/pages/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Game = () => {\r\n  const [questionData, setQuestionData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/get-question')\r\n      .then(response => response.json())\r\n      .then(data => setQuestionData(data))\r\n      .catch(error => console.error('Error fetching question:', error));\r\n  }, []);\r\n\r\n  const sendResultToBackend = (answer, isCorrect) => {\r\n    const data = {\r\n      questionId: questionData.id, // Ensure questionData.id is defined\r\n      selectedAnswer: answer.toString(), // Ensure answer is a string\r\n      isCorrect: isCorrect,\r\n    };\r\n\r\n    // Print the content of the data object before sending\r\n    console.log('Sending result to backend:', JSON.stringify(data, null, 2));\r\n\r\n    fetch('http://localhost:8000/submit-result', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => console.log('Result sent successfully:', data))\r\n    .catch(error => console.error('Error sending result:', error));\r\n  };\r\n\r\n  if (!questionData) return <div>Loading...</div>;\r\n\r\n  const handleAnswerClick = (answer) => {\r\n    const isCorrect = answer === questionData.correct_answer; // Update as per your correct answer logic\r\n    sendResultToBackend(answer, isCorrect);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{questionData.question}</h2>\r\n      {questionData.answers.map((answer, index) => (\r\n        <button key={index} onClick={() => handleAnswerClick(answer)}>\r\n          {answer}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}