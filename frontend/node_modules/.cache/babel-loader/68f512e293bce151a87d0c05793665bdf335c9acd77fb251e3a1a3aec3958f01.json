{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\frontend\\\\src\\\\components\\\\NumberPresenter.js\";\nimport React from 'react';\nimport { MathJax } from 'better-react-mathjax';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberPresenter = ({\n  base,\n  exponentsAndOperators\n}) => {\n  const generateFormula = () => {\n    let formula = `${base}^{${exponentsAndOperators[0]}}`;\n    for (let i = 1; i < exponentsAndOperators.length; i += 2) {\n      if (exponentsAndOperators[i] === '/') {\n        formula += ` \\\\cdot ${base}^{${exponentsAndOperators[i + 1]}}`;\n      } else {\n        formula += ` ${exponentsAndOperators[i]} ${base}^{${exponentsAndOperators[i + 1]}}`;\n      }\n    }\n    return formula;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100 rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(MathJax, {\n      dynamic: true,\n      children: `\\\\[${generateFormula()}\\\\]`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = NumberPresenter;\nexport default NumberPresenter;\nvar _c;\n$RefreshReg$(_c, \"NumberPresenter\");","map":{"version":3,"names":["React","MathJax","jsxDEV","_jsxDEV","NumberPresenter","base","exponentsAndOperators","generateFormula","formula","i","length","className","children","dynamic","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/components/NumberPresenter.js"],"sourcesContent":["import React from 'react';\r\nimport { MathJax } from 'better-react-mathjax';\r\n\r\nconst NumberPresenter = ({ base, exponentsAndOperators }) => {\r\n  const generateFormula = () => {\r\n    let formula = `${base}^{${exponentsAndOperators[0]}}`;\r\n\r\n    for (let i = 1; i < exponentsAndOperators.length; i += 2) {\r\n      if (exponentsAndOperators[i] === '/') {\r\n        formula += ` \\\\cdot ${base}^{${exponentsAndOperators[i+1]}}`;\r\n      } else {\r\n        formula += ` ${exponentsAndOperators[i]} ${base}^{${exponentsAndOperators[i+1]}}`;\r\n      }\r\n    }\r\n\r\n    return formula;\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-100 rounded-lg\">\r\n      <MathJax dynamic>\r\n        {`\\\\[${generateFormula()}\\\\]`}\r\n      </MathJax>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberPresenter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAsB,CAAC,KAAK;EAC3D,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIC,OAAO,GAAG,GAAGH,IAAI,KAAKC,qBAAqB,CAAC,CAAC,CAAC,GAAG;IAErD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,qBAAqB,CAACI,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxD,IAAIH,qBAAqB,CAACG,CAAC,CAAC,KAAK,GAAG,EAAE;QACpCD,OAAO,IAAI,WAAWH,IAAI,KAAKC,qBAAqB,CAACG,CAAC,GAAC,CAAC,CAAC,GAAG;MAC9D,CAAC,MAAM;QACLD,OAAO,IAAI,IAAIF,qBAAqB,CAACG,CAAC,CAAC,IAAIJ,IAAI,KAAKC,qBAAqB,CAACG,CAAC,GAAC,CAAC,CAAC,GAAG;MACnF;IACF;IAEA,OAAOD,OAAO;EAChB,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,4BAA4B;IAAAC,QAAA,eACzCT,OAAA,CAACF,OAAO;MAACY,OAAO;MAAAD,QAAA,EACb,MAAML,eAAe,CAAC,CAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBId,eAAe;AAwBrB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}