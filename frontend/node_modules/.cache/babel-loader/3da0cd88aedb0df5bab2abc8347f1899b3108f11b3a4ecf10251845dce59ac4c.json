{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\beginner-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizApp = () => {\n  _s();\n  const [menuVisible, setMenuVisible] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [missedQuestions, setMissedQuestions] = useState([]);\n\n  // Gångertabell game state\n  const [isGångertabell, setIsGångertabell] = useState(false);\n  const [gangerQuestion, setGangerQuestion] = useState({});\n  const [gangerAnswers, setGangerAnswers] = useState([]);\n  const [gangerScore, setGangerScore] = useState(0);\n  const [gangerGameOver, setGangerGameOver] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(15);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const response = await fetch('/question.json');\n      const data = await response.json();\n      const shuffledQuestions = data.sort(() => Math.random() - 0.5);\n      setQuestions(shuffledQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  const generateGangerQuestion = useCallback(() => {\n    const num1 = Math.floor(Math.random() * 10) + 1;\n    const num2 = Math.floor(Math.random() * 10) + 1;\n    const correctAnswer = num1 * num2;\n    const wrongAnswers = new Set();\n    while (wrongAnswers.size < 3) {\n      const wrongAnswer = Math.floor(Math.random() * 100) + 1;\n      if (wrongAnswer !== correctAnswer) {\n        wrongAnswers.add(wrongAnswer);\n      }\n    }\n    const allAnswers = Array.from(wrongAnswers).concat(correctAnswer);\n    const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n    setGangerQuestion({\n      num1,\n      num2,\n      correctAnswer\n    });\n    setGangerAnswers(shuffledAnswers);\n  }, []);\n  useEffect(() => {\n    if (isGångertabell && !gangerGameOver) {\n      generateGangerQuestion();\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setGangerGameOver(true);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [isGångertabell, gangerGameOver, generateGangerQuestion]);\n  const handleGangerAnswer = selectedOption => {\n    if (selectedOption === gangerQuestion.correctAnswer) {\n      setGangerScore(prev => prev + 1);\n    }\n    generateGangerQuestion();\n  };\n  const startGangerGame = () => {\n    setIsGångertabell(true);\n    setMenuVisible(false);\n    setGangerScore(0);\n    setGangerGameOver(false);\n    setTimeLeft(15);\n  };\n  const handleAnswer = selectedOption => {\n    setUserAnswers(prev => [...prev, selectedOption]);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setIsFinished(true);\n      checkMissedQuestions();\n    }\n  };\n  const checkMissedQuestions = () => {\n    const missed = questions.filter((question, index) => userAnswers[index] !== question.correct_answer);\n    setMissedQuestions(missed);\n  };\n  const correctAnswersCount = () => {\n    return userAnswers.filter((answer, index) => answer === questions[index].correct_answer).length;\n  };\n  const restartQuiz = () => {\n    setUserAnswers([]);\n    setCurrentQuestionIndex(0);\n    setIsFinished(false);\n    const shuffledMissedQuestions = missedQuestions.sort(() => Math.random() - 0.5);\n    setQuestions(shuffledMissedQuestions);\n  };\n  const startQuiz = category => {\n    if (category === 'Kvadratrot') {\n      const kvadratrotQuestions = questions.filter(q => q.category === 'Kvadratrot');\n      setQuestions(kvadratrotQuestions);\n      setCurrentQuestionIndex(0);\n      setIsFinished(false);\n      setMenuVisible(false);\n    }\n  };\n  const resetAllGames = () => {\n    setIsGångertabell(false);\n    setGangerGameOver(false);\n    setGangerScore(0);\n    setTimeLeft(15);\n    setIsFinished(false);\n    setCurrentQuestionIndex(0);\n    setUserAnswers([]);\n  };\n  if (menuVisible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Main Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetAllGames();\n          startQuiz('Kvadratrot');\n        },\n        children: \"Kvadratrot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetAllGames();\n          startGangerGame();\n        },\n        children: \"G\\xE5ngertabell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz Finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct Answers: \", correctAnswersCount(), \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Your Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Correct Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: questions.map((question, index) => {\n            const userAnswer = userAnswers[index];\n            const isCorrect = userAnswer === question.correct_answer;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: userAnswer || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.correct_answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isCorrect ? 'Correct' : 'Incorrect'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        children: \"Try Failed Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetAllGames();\n          setMenuVisible(true);\n        },\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  if (isGångertabell) {\n    if (gangerGameOver) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct Answers: \", gangerScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            resetAllGames();\n            setMenuVisible(true);\n          },\n          children: \"Back to Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Time left: \", timeLeft, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [gangerQuestion.num1, \" x \", gangerQuestion.num2, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gangerAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGangerAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizApp, \"6OnlgQsxJJWAa2H4aWlPcaZsYZI=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","QuizApp","_s","menuVisible","setMenuVisible","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","isFinished","setIsFinished","missedQuestions","setMissedQuestions","isGångertabell","setIsGångertabell","gangerQuestion","setGangerQuestion","gangerAnswers","setGangerAnswers","gangerScore","setGangerScore","gangerGameOver","setGangerGameOver","timeLeft","setTimeLeft","fetchQuestions","response","fetch","data","json","shuffledQuestions","sort","Math","random","generateGangerQuestion","num1","floor","num2","correctAnswer","wrongAnswers","Set","size","wrongAnswer","add","allAnswers","Array","from","concat","shuffledAnswers","timer","setInterval","prevTime","clearInterval","handleGangerAnswer","selectedOption","prev","startGangerGame","handleAnswer","length","checkMissedQuestions","missed","filter","question","index","correct_answer","correctAnswersCount","answer","restartQuiz","shuffledMissedQuestions","startQuiz","category","kvadratrotQuestions","q","resetAllGames","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","userAnswer","isCorrect","text","currentQuestion","options","option","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/beginner-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './App.css';\n\nconst QuizApp = () => {\n  const [menuVisible, setMenuVisible] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [missedQuestions, setMissedQuestions] = useState([]);\n\n  // Gångertabell game state\n  const [isGångertabell, setIsGångertabell] = useState(false);\n  const [gangerQuestion, setGangerQuestion] = useState({});\n  const [gangerAnswers, setGangerAnswers] = useState([]);\n  const [gangerScore, setGangerScore] = useState(0);\n  const [gangerGameOver, setGangerGameOver] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(15);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const response = await fetch('/question.json');\n      const data = await response.json();\n      const shuffledQuestions = data.sort(() => Math.random() - 0.5);\n      setQuestions(shuffledQuestions);\n    };\n    fetchQuestions();\n  }, []);\n\n  const generateGangerQuestion = useCallback(() => {\n    const num1 = Math.floor(Math.random() * 10) + 1;\n    const num2 = Math.floor(Math.random() * 10) + 1;\n    const correctAnswer = num1 * num2;\n    const wrongAnswers = new Set();\n\n    while (wrongAnswers.size < 3) {\n      const wrongAnswer = Math.floor(Math.random() * 100) + 1;\n      if (wrongAnswer !== correctAnswer) {\n        wrongAnswers.add(wrongAnswer);\n      }\n    }\n\n    const allAnswers = Array.from(wrongAnswers).concat(correctAnswer);\n    const shuffledAnswers = allAnswers.sort(() => Math.random() - 0.5);\n\n    setGangerQuestion({ num1, num2, correctAnswer });\n    setGangerAnswers(shuffledAnswers);\n  }, []);\n\n  useEffect(() => {\n    if (isGångertabell && !gangerGameOver) {\n      generateGangerQuestion();\n      const timer = setInterval(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            setGangerGameOver(true);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [isGångertabell, gangerGameOver, generateGangerQuestion]);\n\n  const handleGangerAnswer = (selectedOption) => {\n    if (selectedOption === gangerQuestion.correctAnswer) {\n      setGangerScore((prev) => prev + 1);\n    }\n    generateGangerQuestion();\n  };\n\n  const startGangerGame = () => {\n    setIsGångertabell(true);\n    setMenuVisible(false);\n    setGangerScore(0);\n    setGangerGameOver(false);\n    setTimeLeft(15);\n  };\n\n  const handleAnswer = (selectedOption) => {\n    setUserAnswers((prev) => [...prev, selectedOption]);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setIsFinished(true);\n      checkMissedQuestions();\n    }\n  };\n\n  const checkMissedQuestions = () => {\n    const missed = questions.filter((question, index) => userAnswers[index] !== question.correct_answer);\n    setMissedQuestions(missed);\n  };\n\n  const correctAnswersCount = () => {\n    return userAnswers.filter((answer, index) => answer === questions[index].correct_answer).length;\n  };\n\n  const restartQuiz = () => {\n    setUserAnswers([]);\n    setCurrentQuestionIndex(0);\n    setIsFinished(false);\n    const shuffledMissedQuestions = missedQuestions.sort(() => Math.random() - 0.5);\n    setQuestions(shuffledMissedQuestions);\n  };\n\n  const startQuiz = (category) => {\n    if (category === 'Kvadratrot') {\n      const kvadratrotQuestions = questions.filter(q => q.category === 'Kvadratrot');\n      setQuestions(kvadratrotQuestions);\n      setCurrentQuestionIndex(0);\n      setIsFinished(false);\n      setMenuVisible(false);\n    }\n  };\n\n  const resetAllGames = () => {\n    setIsGångertabell(false);\n    setGangerGameOver(false);\n    setGangerScore(0);\n    setTimeLeft(15);\n    setIsFinished(false);\n    setCurrentQuestionIndex(0);\n    setUserAnswers([]);\n  };\n\n  if (menuVisible) {\n    return (\n      <div className=\"App\">\n        <h1>Main Menu</h1>\n        <button onClick={() => { resetAllGames(); startQuiz('Kvadratrot'); }}>Kvadratrot</button>\n        <button onClick={() => { resetAllGames(); startGangerGame(); }}>Gångertabell</button>\n      </div>\n    );\n  }\n\n  if (isFinished) {\n    return (\n      <div className=\"App\">\n        <h1>Quiz Finished!</h1>\n        <p>Correct Answers: {correctAnswersCount()} out of {questions.length}</p>\n        <h2>Results</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Your Answer</th>\n              <th>Correct Answer</th>\n              <th>Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            {questions.map((question, index) => {\n              const userAnswer = userAnswers[index];\n              const isCorrect = userAnswer === question.correct_answer;\n              return (\n                <tr key={index}>\n                  <td>{question.text}</td>\n                  <td>{userAnswer || 'N/A'}</td>\n                  <td>{question.correct_answer}</td>\n                  <td>{isCorrect ? 'Correct' : 'Incorrect'}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <button onClick={restartQuiz}>Try Failed Questions</button>\n        <button onClick={() => { resetAllGames(); setMenuVisible(true); }}>Back to Menu</button>\n      </div>\n    );\n  }\n\n  if (isGångertabell) {\n    if (gangerGameOver) {\n      return (\n        <div className=\"App\">\n          <h1>Game Over!</h1>\n          <p>Correct Answers: {gangerScore}</p>\n          <button onClick={() => { resetAllGames(); setMenuVisible(true); }}>Back to Menu</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h2>Time left: {timeLeft} seconds</h2>\n        <h2>{gangerQuestion.num1} x {gangerQuestion.num2} = ?</h2>\n        <div>\n          {gangerAnswers.map((answer, index) => (\n            <button key={index} onClick={() => handleGangerAnswer(answer)}>\n              {answer}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (questions.length === 0) {\n    return <div className=\"App\">Loading questions...</div>;\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"App\">\n      <h2>{currentQuestion.text}</h2>\n      <div>\n        {currentQuestion.options.map((option, index) => (\n          <button key={index} onClick={() => handleAnswer(option)}>\n            {option}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}