{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\beginner-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [frogImage, setFrogImage] = useState('');\n\n  // Function to fetch a random frog image from Unsplash\n  const fetchFrogImage = async () => {\n    try {\n      const response = await axios.get('https://source.unsplash.com/featured/?frog' // This URL fetches a random frog image from Unsplash\n      );\n      setFrogImage(response.request.responseURL); // Set the fetched image URL\n    } catch (error) {\n      console.error('Error fetching the frog image:', error);\n    }\n  };\n  const increment = () => {\n    setCount(count + 1);\n    fetchFrogImage(); // Fetch a new image on increment\n  };\n  const decrement = () => {\n    if (count > 0) {\n      setCount(count - 1);\n      fetchFrogImage(); // Fetch a new image on decrement\n    }\n  };\n\n  // Fetch a frog image initially on mount\n  useEffect(() => {\n    fetchFrogImage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Counter App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Frog Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), frogImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: frogImage,\n        alt: \"Random Frog\",\n        style: {\n          width: '300px',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"n1liC4D0IEZf3I3nhsdgjEyIywM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","count","setCount","frogImage","setFrogImage","fetchFrogImage","response","get","request","responseURL","error","console","increment","decrement","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/beginner-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [frogImage, setFrogImage] = useState('');\n\n  // Function to fetch a random frog image from Unsplash\n  const fetchFrogImage = async () => {\n    try {\n      const response = await axios.get(\n        'https://source.unsplash.com/featured/?frog' // This URL fetches a random frog image from Unsplash\n      );\n      setFrogImage(response.request.responseURL); // Set the fetched image URL\n    } catch (error) {\n      console.error('Error fetching the frog image:', error);\n    }\n  };\n\n  const increment = () => {\n    setCount(count + 1);\n    fetchFrogImage(); // Fetch a new image on increment\n  };\n\n  const decrement = () => {\n    if (count > 0) {\n      setCount(count - 1);\n      fetchFrogImage(); // Fetch a new image on decrement\n    }\n  };\n\n  // Fetch a frog image initially on mount\n  useEffect(() => {\n    fetchFrogImage();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Simple Counter App</h1>\n      <p>Current Count: {count}</p>\n      <button onClick={increment}>Increase</button>\n      <button onClick={decrement}>Decrease</button>\n\n      {/* Display the frog image */}\n      <div>\n        <h2>Frog Image:</h2>\n        {frogImage ? (\n          <img src={frogImage} alt=\"Random Frog\" style={{ width: '300px', height: 'auto' }} />\n        ) : (\n          <p>Loading image...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}