{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const api=axios.create({baseURL:process.env.REACT_APP_API_URL,withCredentials:true});const Game=()=>{const navigate=useNavigate();const[questionData,setQuestionData]=useState(null);const[loading,setLoading]=useState(true);const[message,setMessage]=useState(\"\");const fetchQuestion=async()=>{try{setLoading(true);const response=await api.get('/get-question');setQuestionData(response.data);setLoading(false);setMessage(\"\");}catch(error){console.error(\"Error fetching question:\",error);setLoading(false);}};const submitAnswer=async isCorrect=>{try{if(!questionData||!questionData.variables||questionData.variables.length<2){console.error(\"Question data is incomplete\");return;}const[x,y]=questionData.variables;const response=await api.post('/submit-answer',{x:x,y:y,is_correct:isCorrect});console.log(response.data.message);}catch(error){console.error(\"Error submitting answer:\",error);if(error.response){console.error(\"Response data:\",error.response.data);console.error(\"Response status:\",error.response.status);}}};useEffect(()=>{fetchQuestion();},[]);const handleAnswerClick=async selectedAnswer=>{const isCorrect=selectedAnswer===questionData.correct_answer;if(isCorrect){setMessage(\"Correct! Fetching a new question...\");}else{setMessage(\"Incorrect! Try again...\");}// Submit the answer to the backend\nawait submitAnswer(isCorrect);// Fetch a new question after a short delay\nsetTimeout(()=>{fetchQuestion();},1500);};const handleGameClick=()=>{navigate('/');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Page\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading question...\"}):questionData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:questionData.question}),/*#__PURE__*/_jsx(\"ul\",{children:questionData.answers.map((answer,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleAnswerClick(answer),style:{cursor:'pointer',padding:'5px',border:'1px solid black',margin:'5px',display:'inline-block'},children:answer},index))}),/*#__PURE__*/_jsx(\"p\",{children:message})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGameClick,children:\"Go to Home\"})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","Game","navigate","questionData","setQuestionData","loading","setLoading","message","setMessage","fetchQuestion","response","get","data","error","console","submitAnswer","isCorrect","variables","length","x","y","post","is_correct","log","status","handleAnswerClick","selectedAnswer","correct_answer","setTimeout","handleGameClick","children","question","answers","map","answer","index","onClick","style","cursor","padding","border","margin","display"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n   const api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    withCredentials: true,\r\n  });\r\n\r\nconst Game = () => {\r\n    const navigate = useNavigate();\r\n    const [questionData, setQuestionData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const fetchQuestion = async () => {\r\n        try {\r\n          setLoading(true);\r\n          const response = await api.get('/get-question');\r\n          setQuestionData(response.data);\r\n          setLoading(false);\r\n          setMessage(\"\");\r\n        } catch (error) {\r\n          console.error(\"Error fetching question:\", error);\r\n          setLoading(false);\r\n        }\r\n      };\r\n   \r\n      const submitAnswer = async (isCorrect) => {\r\n        try {\r\n          if (!questionData || !questionData.variables || questionData.variables.length < 2) {\r\n            console.error(\"Question data is incomplete\");\r\n            return;\r\n          }\r\n          const [x, y] = questionData.variables;\r\n          const response = await api.post('/submit-answer', {\r\n            x: x,\r\n            y: y,\r\n            is_correct: isCorrect\r\n          });\r\n          console.log(response.data.message);\r\n        } catch (error) {\r\n          console.error(\"Error submitting answer:\", error);\r\n          if (error.response) {\r\n            console.error(\"Response data:\", error.response.data);\r\n            console.error(\"Response status:\", error.response.status);\r\n          }\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchQuestion();\r\n    }, []);\r\n\r\n    const handleAnswerClick = async (selectedAnswer) => {\r\n        const isCorrect = selectedAnswer === questionData.correct_answer;\r\n        if (isCorrect) {\r\n            setMessage(\"Correct! Fetching a new question...\");\r\n        } else {\r\n            setMessage(\"Incorrect! Try again...\");\r\n        }\r\n\r\n        // Submit the answer to the backend\r\n        await submitAnswer(isCorrect);\r\n\r\n        // Fetch a new question after a short delay\r\n        setTimeout(() => {\r\n            fetchQuestion();\r\n        }, 1500);\r\n    };\r\n\r\n    const handleGameClick = () => {\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game Page</h1>\r\n            {loading ? (\r\n                <p>Loading question...</p>\r\n            ) : (\r\n                questionData && (\r\n                    <>\r\n                        <p>{questionData.question}</p>\r\n                        <ul>\r\n                            {questionData.answers.map((answer, index) => (\r\n                                <li\r\n                                    key={index}\r\n                                    onClick={() => handleAnswerClick(answer)}\r\n                                    style={{ cursor: 'pointer', padding: '5px', border: '1px solid black', margin: '5px', display: 'inline-block' }}\r\n                                >\r\n                                    {answer}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <p>{message}</p>\r\n                    </>\r\n                )\r\n            )}\r\n            <button onClick={handleGameClick}>Go to Home</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}