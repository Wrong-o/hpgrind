{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{const[questionData,setQuestionData]=useState(null);useEffect(()=>{fetch('http://localhost:8000/get-question').then(response=>response.json()).then(data=>setQuestionData(data)).catch(error=>console.error('Error fetching question:',error));},[]);const sendResultToBackend=(answer,isCorrect)=>{const data={variables:questionData.variables,// Ensure questionData.id is defined\nselectedAnswer:answer.toString(),// Ensure answer is a string\nisCorrect:isCorrect};// Print the content of the data object before sending\nconsole.log('Sending result to backend:',JSON.stringify(data,null,2));fetch('http://localhost:8000/submit-result',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(response=>{if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(data=>console.log('Result sent successfully:',data)).catch(error=>console.error('Error sending result:',error));};if(!questionData)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});const handleAnswerClick=answer=>{const isCorrect=answer===questionData.correct_answer;// Update as per your correct answer logic\nsendResultToBackend(answer,isCorrect);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:questionData.question}),questionData.answers.map((answer,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerClick(answer),children:answer},index))]});};export default Game;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Game","questionData","setQuestionData","fetch","then","response","json","data","catch","error","console","sendResultToBackend","answer","isCorrect","variables","selectedAnswer","toString","log","JSON","stringify","method","headers","body","ok","Error","status","children","handleAnswerClick","correct_answer","question","answers","map","index","onClick"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/pages/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Game = () => {\r\n  const [questionData, setQuestionData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/get-question')\r\n      .then(response => response.json())\r\n      .then(data => setQuestionData(data))\r\n      .catch(error => console.error('Error fetching question:', error));\r\n  }, []);\r\n\r\n  const sendResultToBackend = (answer, isCorrect) => {\r\n    const data = {\r\n      variables: questionData.variables, // Ensure questionData.id is defined\r\n      selectedAnswer: answer.toString(), // Ensure answer is a string\r\n      isCorrect: isCorrect,\r\n    };\r\n\r\n    // Print the content of the data object before sending\r\n    console.log('Sending result to backend:', JSON.stringify(data, null, 2));\r\n\r\n    fetch('http://localhost:8000/submit-result', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => console.log('Result sent successfully:', data))\r\n    .catch(error => console.error('Error sending result:', error));\r\n  };\r\n\r\n  if (!questionData) return <div>Loading...</div>;\r\n\r\n  const handleAnswerClick = (answer) => {\r\n    const isCorrect = answer === questionData.correct_answer; // Update as per your correct answer logic\r\n    sendResultToBackend(answer, isCorrect);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{questionData.question}</h2>\r\n      {questionData.answers.map((answer, index) => (\r\n        <button key={index} onClick={() => handleAnswerClick(answer)}>\r\n          {answer}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAEtDD,SAAS,CAAC,IAAM,CACdS,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAIL,eAAe,CAACK,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,mBAAmB,CAAGA,CAACC,MAAM,CAAEC,SAAS,GAAK,CACjD,KAAM,CAAAN,IAAI,CAAG,CACXO,SAAS,CAAEb,YAAY,CAACa,SAAS,CAAE;AACnCC,cAAc,CAAEH,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAE;AACnCH,SAAS,CAAEA,SACb,CAAC,CAED;AACAH,OAAO,CAACO,GAAG,CAAC,4BAA4B,CAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAExEJ,KAAK,CAAC,qCAAqC,CAAE,CAC3CiB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEJ,IAAI,CAACC,SAAS,CAACZ,IAAI,CAC3B,CAAC,CAAC,CACDH,IAAI,CAACC,QAAQ,EAAI,CAChB,GAAI,CAACA,QAAQ,CAACkB,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBnB,QAAQ,CAACoB,MAAM,EAAE,CAAC,CAC3D,CACA,MAAO,CAAApB,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,EAAIG,OAAO,CAACO,GAAG,CAAC,2BAA2B,CAAEV,IAAI,CAAC,CAAC,CAC5DC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAC,CAChE,CAAC,CAED,GAAI,CAACR,YAAY,CAAE,mBAAOJ,IAAA,QAAA6B,QAAA,CAAK,YAAU,CAAK,CAAC,CAE/C,KAAM,CAAAC,iBAAiB,CAAIf,MAAM,EAAK,CACpC,KAAM,CAAAC,SAAS,CAAGD,MAAM,GAAKX,YAAY,CAAC2B,cAAc,CAAE;AAC1DjB,mBAAmB,CAACC,MAAM,CAAEC,SAAS,CAAC,CACxC,CAAC,CAED,mBACEd,KAAA,QAAA2B,QAAA,eACE7B,IAAA,OAAA6B,QAAA,CAAKzB,YAAY,CAAC4B,QAAQ,CAAK,CAAC,CAC/B5B,YAAY,CAAC6B,OAAO,CAACC,GAAG,CAAC,CAACnB,MAAM,CAAEoB,KAAK,gBACtCnC,IAAA,WAAoBoC,OAAO,CAAEA,CAAA,GAAMN,iBAAiB,CAACf,MAAM,CAAE,CAAAc,QAAA,CAC1Dd,MAAM,EADIoB,KAEL,CACT,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}