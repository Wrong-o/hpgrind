{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayb\\\\Desktop\\\\blogg\\\\react\\\\frontend\\\\src\\\\pages\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [questionData, setQuestionData] = useState(null);\n  const [refresh, setRefresh] = useState(0); // State to force a re-fetch\n\n  useEffect(() => {\n    fetch('http://localhost:8000/get-question').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setQuestionData(data)).catch(error => console.error('Error fetching question:', error));\n  }, [refresh]); // Run effect every time 'refresh' changes\n\n  const handleRefresh = () => {\n    setRefresh(prev => prev + 1); // Change state to trigger useEffect\n  };\n  if (!questionData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), questionData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      children: answer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"1OxTFGImgOos7frTkGVX2aVJK/U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Game","_s","questionData","setQuestionData","refresh","setRefresh","fetch","then","response","ok","Error","json","data","catch","error","console","handleRefresh","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","question","answers","map","answer","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jayb/Desktop/blogg/react/frontend/src/pages/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Game = () => {\r\n  const [questionData, setQuestionData] = useState(null);\r\n  const [refresh, setRefresh] = useState(0); // State to force a re-fetch\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/get-question')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => setQuestionData(data))\r\n      .catch(error => console.error('Error fetching question:', error));\r\n  }, [refresh]); // Run effect every time 'refresh' changes\r\n\r\n  const handleRefresh = () => {\r\n    setRefresh(prev => prev + 1); // Change state to trigger useEffect\r\n  };\r\n\r\n  if (!questionData) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{questionData.question}</h2>\r\n      {questionData.answers.map((answer, index) => (\r\n        <button key={index} onClick={handleRefresh}>{answer}</button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3CD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIT,eAAe,CAACS,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BX,UAAU,CAACY,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,IAAI,CAACf,YAAY,EAAE,oBAAOH,OAAA;IAAAmB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/C,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAKhB,YAAY,CAACqB;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC/BpB,YAAY,CAACsB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtC5B,OAAA;MAAoB6B,OAAO,EAAEZ,aAAc;MAAAE,QAAA,EAAEQ;IAAM,GAAtCC,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9BID,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}